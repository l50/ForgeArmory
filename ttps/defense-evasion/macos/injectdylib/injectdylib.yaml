---
name: Inject Dylib
description: |
  This TTP injects a custom dylib (which opens Calculator) into the
  SafariForWebkitDevelopment binary.

  ## Pre-requisites

  1. The code must be executed on a macOS system.
  1. The user must have the necessary permissions to access the TCC folder and
    compile Swift code.
  1. macOS Developer tools must be installed as the TTP requires Swift. To
    install developer tools:

    ```bash
    xcode-select --install
    ```

  ## Accompanying Code

  The Swift code used in this TTP attempts to inject a dylib into
  `/Applications/Safari.app/Contents/MacOS/SafariForWebkitDevelopment`.

  The C code includes a custom constructor that runs a command to open
  the Calculator app.

mitre:
  tactics:
    - TA0005 Defense Evasion
  techniques:
    - T1055 Process Injection
steps:
  - name: injectdylib
    inline: |
      echo -e "First building the source c file into a dylib..."
      gcc -dynamiclib calc.c -o calc.dylib
      echo -e "Next building the Swift source file to a compiled binary for execution..."
      swiftc injectdylib.swift -o injectdylib
      echo "Next, executing the compiled injectdylib binary to leverage DYLD_INSERT_LIBRARIES to inject calc.dylib into SafariForWebkitDevelopment..."
      ./injectdylib
      echo "Finished executing TTP!"
    cleanup:
      inline: |
        echo "Removing the compiled calc.dylib binary..."
        rm calc.dylib injectdylib
        echo "Closing the Calculator app and paper tape..."
        osascript -e 'tell application "Calculator" to quit'
        echo "Closing Safari..."
        osascript -e 'tell application "Safari" to quit'
        echo "Cleanup Finished!"
